{"version":3,"sources":["../../src/routes/roommates.js"],"names":["router","get","req","res","id","params","then","result","name","send","msg","catch","err"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAIA;;AAKA,MAAMA,SAAS,sBAAf;;AAEAA,OAAOC,GAAP,CAAW,MAAX,EAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,2CAAmB,EAAEC,IAAIF,IAAIG,MAAJ,CAAWD,EAAjB,EAAnB,EACCE,IADD,CACMC,UAAU;AACd,QAAGA,OAAOC,IAAV,EAAgB;AACdL,UAAIM,IAAJ,CAASF,MAAT;AACD,KAFD,MAEO;AACLJ,UAAIM,IAAJ,CAAS,EAACC,KAAK,UAAN,EAAT;AACD;AACF,GAPD,EAQCC,KARD,CAQOC,OAAO;AACZT,QAAIM,IAAJ,CAASG,GAAT;AACD,GAVD;AAWD,CAZD;;kBAceZ,M","file":"roommates.js","sourcesContent":["import { Router } from 'express'\nimport { ObjectID } from 'mongodb'\nimport {\n  FindMany, FindOne, Update, Insert, Remove\n} from '../db'\n\nimport {\n  ROOMS,\n  ROOMMATES\n} from '../db/collections'\n\nconst router = Router()\n\nrouter.get('/:id', (req, res) => {\n  FindOne(ROOMMATES, { id: req.params.id })\n  .then(result => {\n    if(result.name) {\n      res.send(result)\n    } else {\n      res.send({msg: \"No Rooms\"})\n    }\n  })\n  .catch(err => {\n    res.send(err)\n  })\n})\n\nexport default router\n"]}